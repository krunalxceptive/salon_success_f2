version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: salon-success-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: salon_success_manager
      POSTGRES_USER: salon_user
      POSTGRES_PASSWORD: salon_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - salon-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U salon_user -d salon_success_manager"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Salon Success Manager Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: salon-success-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://salon_user:salon_password@postgres:5432/salon_success_manager
      - SESSION_SECRET=${SESSION_SECRET:-your-super-secret-session-key-change-in-production}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_PASS=${GMAIL_PASS}
      - IONOS_USER=${IONOS_USER}
      - IONOS_PASS=${IONOS_PASS}
      - ACTIVECAMPAIGN_API_KEY=${ACTIVECAMPAIGN_API_KEY}
      - ACTIVECAMPAIGN_API_URL=${ACTIVECAMPAIGN_API_URL}
      - ACTIVECAMPAIGN_LIST_ID=${ACTIVECAMPAIGN_LIST_ID}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - salon-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development version (optional)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: salon-success-app-dev
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://salon_user:salon_password@postgres:5432/salon_success_manager
      - SESSION_SECRET=${SESSION_SECRET:-dev-session-secret}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - salon-network
    volumes:
      - .:/app
      - /app/node_modules
    profiles:
      - dev

  # Redis for session storage (optional, for production)
  redis:
    image: redis:7-alpine
    container_name: salon-success-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - salon-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  salon-network:
    driver: bridge
